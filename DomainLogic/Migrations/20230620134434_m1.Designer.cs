// <auto-generated />
using System;
using DomainLogic.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DomainLogic.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230620134434_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DomainLogic.Courses.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("LicensingModel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasDiscriminator<int>("LicensingModel");
                });

            modelBuilder.Entity("DomainLogic.Users.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DomainLogic.Users.Entities.UserCourseEnrolment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCourseEnrolment");
                });

            modelBuilder.Entity("DomainLogic.Courses.Entities.LongTimeCourse", b =>
                {
                    b.HasBaseType("DomainLogic.Courses.Entities.Course");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("DomainLogic.Courses.Entities.ShortTimeCourse", b =>
                {
                    b.HasBaseType("DomainLogic.Courses.Entities.Course");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("DomainLogic.Users.Entities.User", b =>
                {
                    b.OwnsOne("DomainLogic.Users.ValueObjects.Money", "MoneySpent", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MoneySpent");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("DomainLogic.Users.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("DomainLogic.Users.ValueObjects.UserName", "Name", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("DomainLogic.Users.ValueObjects.UserStatus", "Status", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Type")
                                .HasColumnType("int")
                                .HasColumnName("Type");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("DomainLogic.Users.ValueObjects.ExpirationDate", "ExpirationDate", b2 =>
                                {
                                    b2.Property<long>("UserStatusUserId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("datetime2")
                                        .HasColumnName("ExpirationDate");

                                    b2.HasKey("UserStatusUserId");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("UserStatusUserId");
                                });

                            b1.Navigation("ExpirationDate")
                                .IsRequired();
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("MoneySpent")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("DomainLogic.Users.Entities.UserCourseEnrolment", b =>
                {
                    b.HasOne("DomainLogic.Courses.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLogic.Users.Entities.User", "User")
                        .WithMany("UserCourseEnrolments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DomainLogic.Users.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<long>("UserCourseEnrolmentId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Price");

                            b1.HasKey("UserCourseEnrolmentId");

                            b1.ToTable("UserCourseEnrolment");

                            b1.WithOwner()
                                .HasForeignKey("UserCourseEnrolmentId");
                        });

                    b.OwnsOne("DomainLogic.Users.ValueObjects.ExpirationDate", "StatusExpirationDate", b1 =>
                        {
                            b1.Property<long>("UserCourseEnrolmentId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("datetime2")
                                .HasColumnName("StatusExpirationDate");

                            b1.HasKey("UserCourseEnrolmentId");

                            b1.ToTable("UserCourseEnrolment");

                            b1.WithOwner()
                                .HasForeignKey("UserCourseEnrolmentId");
                        });

                    b.Navigation("Course");

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("StatusExpirationDate")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLogic.Users.Entities.User", b =>
                {
                    b.Navigation("UserCourseEnrolments");
                });
#pragma warning restore 612, 618
        }
    }
}
